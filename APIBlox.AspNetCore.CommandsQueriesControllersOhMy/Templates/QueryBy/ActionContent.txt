/// <summary>
///     Action for getting a resource.
/// </summary>
/// <remarks>
///     Possible Response Status Codes: [200](https://httpstatuses.com/200), [204](https://httpstatuses.com/204), [401](https://httpstatuses.com/401), [403](https://httpstatuses.com/403)
/// </remarks>
/// <response code="200">Success, with a result.</response>
/// <response code="204">Success, no results.</response>
/// <response code="401">Unauthorized, You are not authenticated, meaning not authenticated at all or authenticated incorrectly.</response>
/// <response code="403">Forbidden, You have successfully been authenticated, yet you do not have permission (authorization) to access the requested resource.</response>
/// <param name="cancellationToken">The cancellation token.</param>
[PARAMS_COMMENTS]
[HttpGet("[ACTION_ROUTE]")]
[Produces("application/json", "application/problem+json")]
// REMOVED for 2.2, until fix  https://github.com/aspnet/Mvc/issues/8174
//[Consumes("application/json")]
[ProducesErrorResponseType(typeof(RequestErrorObject))]
[ProducesResponseType(typeof([RES_OBJECT_RESULT]), StatusCodes.Status200OK)]
[ProducesResponseType(StatusCodes.Status204NoContent)]
[ProducesResponseType(StatusCodes.Status401Unauthorized)]
[ProducesResponseType(StatusCodes.Status403Forbidden)]
public async Task<IActionResult> [CONTROLLER_NAME]QueryBy[REQ_OBJECT](
    [ACTION_PARAMS]
    CancellationToken cancellationToken
)
{
    var ret = await _getBy[RES_OBJECT_INNER_RESULT]Handler.HandleAsync(
        [NEW_REQ_OBJECT], 
        cancellationToken
    );

	if (ret is null)
		throw new ArgumentException($"You must return a {nameof(HandlerResponse)} instance!");

    if (ret.HasErrors)
        return new ProblemResult(ret.Error);
            
    if (ret.Result is null)
        throw new ArgumentNullException(
            nameof(HandlerResponse.Result),
            "When responding to a GET you must either set an error or pass a result!"
        );

    return Ok(ret.Result);
}
