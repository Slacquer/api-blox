[ACTION_COMMENTS]
[RESPONSE_TYPES_COMMENTS]
/// <param name="cancellationToken">The cancellation token.</param>
[PARAMS_COMMENTS]
[HttpPost("[ACTION_ROUTE]")]
[Produces("application/json", "application/problem+json")]
[Consumes("application/json")]
[ProducesErrorResponseType(typeof(RequestErrorObject))]
[RESPONSE_TYPES]
public async Task<IActionResult> [CONTROLLER_NAME]Post[REQ_OBJECT](
	[FromServices]ICommandHandler<[REQ_OBJECT], HandlerResponse> handler,
    [ACTION_PARAMS]
    CancellationToken cancellationToken
)
{
    var ret = await handler.HandleAsync(
        [NEW_REQ_OBJECT], 
        cancellationToken
    );

	if (ret is null)
		throw new ArgumentException($"You must return a {nameof(HandlerResponse)} instance!");

    var errorResult = ret.HasErrors ? new ProblemResult(ret.Error) : null;

    if (errorResult is null && ret.Result is null)
        throw new NullReferenceException(
            "When responding to a POST you must either set an error or pass some results!"
        );

    if (!(errorResult is null))
        return errorResult;

    var id = FindId(ret.Result);

    return Equals(id, -1) ? Ok(ret.Result) : CreatedAtRoute(new {id}, ret);
}