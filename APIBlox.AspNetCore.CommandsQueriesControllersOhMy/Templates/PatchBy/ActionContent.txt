/// <summary>
///     Action for updating/patching a resource.
/// </summary>
/// <remarks>
///     Possible Response Status Codes: [204](https://httpstatuses.com/204), [401](https://httpstatuses.com/401), [403](https://httpstatuses.com/403), [404](https://httpstatuses.com/404), [409](https://httpstatuses.com/409)
/// </remarks>
/// <response code="204">Success, no results.</response>
/// <response code="401">Unauthorized, You are not authenticated, meaning not authenticated at all or authenticated incorrectly.</response>
/// <response code="403">Forbidden, You have successfully been authenticated, yet you do not have permission (authorization) to access the requested resource.</response>
/// <response code="404">NotFound, The resource was not found using the supplied input parameters.</response>
/// <response code="409">Conflict, The supplied input parameters would cause a data violation.</response>
/// <param name="cancellationToken">The cancellation token.</param>
[PARAMS_COMMENTS]
[HttpPatch("[ACTION_ROUTE]")]
[Produces("application/json", "application/problem+json")]
[Consumes("application/json","application/json-patch+json")]
[ProducesErrorResponseType(typeof(RequestErrorObject))]
[RESPONSE_TYPES]
public async Task<IActionResult> [CONTROLLER_NAME]PatchBy[REQ_OBJECT](
    [ACTION_PARAMS]
    CancellationToken cancellationToken
)
{
    var ret = await _patchBy[REQ_OBJECT]Handler.HandleAsync(
        [NEW_REQ_OBJECT],
        cancellationToken
    );

	if (ret is null)
		throw new ArgumentException($"You must return a {nameof(HandlerResponse)} instance!");

    return ret.HasErrors
        ? (IActionResult) new ProblemResult(ret.Error)
        : NoContent();
}