/// <summary>
///     Action for creating a resource.
/// </summary>
/// <remarks>
///     Possible Response Status Codes: <a href="https://httpstatuses.com/204">204</a>, <a href="https://httpstatuses.com/401">401</a>, <a href="https://httpstatuses.com/403">403</a>, <a href="https://httpstatuses.com/404">404</a>, <a href="https://httpstatuses.com/409">409</a>
/// </remarks>
/// <response code="202">Success, [RES_OBJECT_RESULT] created, but not finalized.</response>
/// <response code="401">Unauthorized, You are not authenticated, meaning not authenticated at all or authenticated incorrectly.</response>
/// <response code="403">Forbidden, You have successfully been authenticated, yet you do not have permission (authorization) to access the requested resource.</response>
/// <response code="404">NotFound, The resource was not found using the supplied input parameters.</response>
/// <response code="409">Conflict, The supplied input parameters would cause a data violation.</response>
/// <param name="cancellationToken">The cancellation token.</param>
[PARAMS_COMMENTS]
[HttpPost("[ACTION_ROUTE]")]
[Produces("application/json")]
[Consumes("application/json")]
[ProducesResponseType(StatusCodes.Status202Accepted)]
[ProducesResponseType(StatusCodes.Status401Unauthorized)]
[ProducesResponseType(StatusCodes.Status403Forbidden)]
[ProducesResponseType(StatusCodes.Status404NotFound)]
[ProducesResponseType(StatusCodes.Status409Conflict)]
public async Task<IActionResult> Post(
    [ACTION_PARAMS]
    CancellationToken cancellationToken
)
{
    var ret = await _postByAccepted[REQ_OBJECT]Handler.HandleAsync(
        [NEW_REQ_OBJECT], 
        cancellationToken
    ).ConfigureAwait(false);


	var errorResult = ret.HasErrors
		? new ProblemResult(ret.Error)
		: null;

    if (!(errorResult is null))
        return errorResult;

    return (IActionResult) Accepted(ret.Result);
}