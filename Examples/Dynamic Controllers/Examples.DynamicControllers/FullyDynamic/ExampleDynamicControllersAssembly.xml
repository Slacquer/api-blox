<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ExampleDynamicControllersAssembly</name>
    </assembly>
    <members>
        <member name="T:Examples.Controllers.KissMyAss">
            <inheritdoc />
            <summary>
                Class KissMyAss.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase" />
        </member>
        <member name="M:Examples.Controllers.KissMyAss.#ctor(APIBlox.AspNetCore.Contracts.IQueryHandler{Examples.Resources.ParentRequest,APIBlox.AspNetCore.Types.HandlerResponse})">
            <summary>
                Initializes a new instance of the <see cref="T:Examples.Controllers.KissMyAss" /> class.
            </summary>
            <param name="getAllHandler">The handler used to for querying ParentResponse.</param>
        </member>
        <member name="M:Examples.Controllers.KissMyAss.QueryAll(System.String,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
                Action for getting a collection of ParentResponse resources.
            </summary>
            <remarks>
                Possible Response Status Codes: <a href="https://httpstatuses.com/200">200</a>, <a href="https://httpstatuses.com/204">204</a>, <a href="https://httpstatuses.com/401">401</a>, <a href="https://httpstatuses.com/403">403</a>
            </remarks>
            <response code="200">Success, with an array of results.</response>
            <response code="204">Success, no results.</response>
            <response code="401">Unauthorized, You are not authenticated, meaning not authenticated at all or authenticated incorrectly.</response>
            <response code="403">Forbidden, You have successfully been authenticated, yet you do not have permission (authorization) to access the requested resource.</response>
            <param name="cancellationToken">The cancellation token.</param>
            <param name ="someOtherThingWeNeedToKnowWhenRequestingData">Gets or sets some other thing we need to know when requesting data.</param>
            <param name ="someRouteValueWeNeed">Gets or sets some route value we need.</param>
            <param name ="filter">Sets the filter (where). Usage is determined by the API itself.</param>
            <param name ="select">Sets the select (projection).  Usage is determined by the API itself.</param>
            <param name ="runningCount">Gets the running count.  Used internally.</param>
            <param name ="skip">Sets the skip amount.</param>
            <param name ="top">Sets the top amount.</param>
            <param name ="orderBy">Sets the order by.  Usage is determined by the API itself.</param>
        </member>
    </members>
</doc>
